---
- name: Ensure the path to the RPM is clean (no quotes)
  set_fact:
    # Leave this Jinja2 variable handler be. It's fixing potential issues
    # with the received URI or file name that makes it difficult to install
    # (extra single/double quotes)
    solidfire_element_rpm_path: >-
      {% if solidfire_element_rpm is not search('http|ftp') %}
      {{ na_sf_filename|trim() }}
      {% else %}{{ solidfire_element_rpm
      |regex_replace("'", "")
      |regex_replace('"','')
      |regex_replace("\s+", '')
      |trim() }}
      {% endif %}
  when: >
    solidfire_element_rpm_path is undefined and
    (solidfire_element_rpm is defined and
    solidfire_element_rpm)

- name: Ensure the path to the RPM is clean (no CR/LF/space)
  # This is also fixing potential issues with the received URI or file name
  # that makes it difficult to install. I.e. extra CR/LF, LF, whitespace
  set_fact:
    solidfire_element_rpm_path: '{{ solidfire_element_rpm_path|regex_replace("\s+","") }}'

- debug:
    msg: "Installing from: '{{ solidfire_element_rpm_path }}'"

- name: Ensure local copy of RPM is available when not using FTP/HTTP source
  when: >
    solidfire_element_rpm_path is defined and
    solidfire_element_rpm_path is not search( 'http|ftp' )
  block:
    - name: Ensure local copy of RPM file is available
      copy:
        src: "{{ solidfire_element_rpm }}"
        dest: "{{ solidfire_element_rpm_path }}"

    - stat:
        path: "{{ solidfire_element_rpm_path }}"
      register: sf_downloaded

    - fail:
        msg: "Error: Unable to locate the RPM file on {{ ansible_hostname }}!"
      when: not sf_downloaded.stat.exists

- name: Ensure RPM file is downloadable via URL
  any_errors_fatal: True
  when: >
    solidfire_element_rpm_path is defined and
    solidfire_element_rpm_path is search( 'http|ftp' )
  block:
    - name: Ensure RPM file is downloadable via URL
      uri:
        url: "{{ solidfire_element_rpm_path }}"
        method: HEAD
        status_code: 200
        validate_certs: "{{ na_sf_validate_certs }}"
        use_proxy: "{{ na_sf_use_proxy }}"
